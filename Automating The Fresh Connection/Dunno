{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": true,
    "ExecuteTime": {
     "start_time": "2024-04-18T01:14:08.486984Z",
     "end_time": "2024-04-18T01:14:08.736361Z"
    }
   },
   "outputs": [],
   "source": [
    "import os\n",
    "import time\n",
    "import selenium.webdriver as webdriver\n",
    "from selenium.webdriver.support.ui import WebDriverWait, Select\n",
    "from selenium.webdriver.support import expected_conditions as EC\n",
    "from selenium.webdriver.firefox.options import Options\n",
    "from selenium.webdriver.common.by import By\n",
    "from selenium.webdriver.common.action_chains import ActionChains\n",
    "from selenium.webdriver.common.keys import Keys\n",
    "from selenium.common.exceptions import TimeoutException, NoSuchElementException, ElementNotInteractableException\n",
    "from bs4 import BeautifulSoup\n",
    "import pandas as pd\n",
    "import re"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\huynh\\AppData\\Local\\Temp\\ipykernel_10052\\305148697.py:3: DeprecationWarning: firefox_profile has been deprecated, please use an Options object\n",
      "  FireFoxProfile = webdriver.FirefoxProfile()\n"
     ]
    }
   ],
   "source": [
    "user_agent = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:87.0) Gecko/20100101 Firefox/87.0'\n",
    "FireFoxDriverPath = r'D:\\Python các thứ\\geckodriver.exe'\n",
    "FireFoxProfile = webdriver.FirefoxProfile()\n",
    "FireFoxProfile.set_preference(\"general.useragent.override\", user_agent)\n",
    "browser = webdriver.Firefox()\n",
    "browser. implicitly_wait(7)\n",
    "url = \"https://my.inchainge.com/\"\n",
    "browser.get(url)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "start_time": "2024-04-18T01:14:09.398656Z",
     "end_time": "2024-04-18T01:14:20.399653Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "outputs": [],
   "source": [
    "username = 'spotifyvv01@gmail.com'\n",
    "password = 'Cauvang01@'\n",
    "\n",
    "browser.find_element(By.ID,'EmailOrUsername').send_keys(username)\n",
    "browser.find_element(By.ID,'Password').send_keys(password)\n",
    "browser.find_element(By.CLASS_NAME,'btn.btn-inchainge.btn-block-xs-only').click()"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "start_time": "2024-04-18T01:14:36.810625Z",
     "end_time": "2024-04-18T01:14:37.873808Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "outputs": [],
   "source": [
    "# Component\n",
    "component = 'https://game.thefreshconnection.eu/v8/MyCompany/Sales'\n",
    "browser.get(component)\n",
    "# time.sleep(2)\n",
    "# browser.get(component)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "start_time": "2024-04-18T01:14:30.780044Z",
     "end_time": "2024-04-18T01:14:33.065148Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "outputs": [
    {
     "data": {
      "text/plain": "<selenium.webdriver.remote.webelement.WebElement (session=\"a3dcd27f-df6b-4c62-9746-4dc76f27cd0d\", element=\"9ce85319-5086-4911-b076-f0815bd49147\")>"
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "calculate_btns = browser.find_elements(By.CSS_SELECTOR, '.btn.ajax')\n",
    "calculate_btns[2]"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "start_time": "2024-04-18T01:14:43.773593Z",
     "end_time": "2024-04-18T01:14:43.862124Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "outputs": [],
   "source": [
    "# Find all elements that match the CSS selector \"a.btn.edit\"\n",
    "negotiate_elements = browser.find_elements(By.CSS_SELECTOR,\"a.btn.edit\")\n",
    "\n",
    "# Check if there is at least one element\n",
    "if negotiate_elements:\n",
    "    # Click the first element\n",
    "    negotiate_elements[0].click()\n",
    "else:\n",
    "    print(\"No elements found\")"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "start_time": "2024-04-18T01:02:54.068521Z",
     "end_time": "2024-04-18T01:02:54.349461Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "outputs": [],
   "source": [
    "\n",
    "# Initialize a table to store the results\n",
    "results = []\n",
    "\n",
    "# Iterate over the range from 90.0 to 99.0 with a step of 0.1\n",
    "# Iterate over the range from 90.0 to 99.0 with a step of 0.1\n",
    "\n",
    "\n",
    "# Iterate over the range from 90.0 to 99.9 with a step of 0.1\n",
    "for i in range(900, 909):\n",
    "    # Re-locate the input element before interacting with it\n",
    "    input_element = browser.find_elements(By.ID,\"ServiceLevel\")\n",
    "    flex_container = browser.find_elements(By.CLASS_NAME,\"form-row\")\n",
    "\n",
    "    # Set the value of the input element\n",
    "    input_element[0].clear()\n",
    "    input_element[0].send_keys(f\"{i / 10}\")\n",
    "    input_element[0].send_keys(Keys.RETURN)\n",
    "    time.sleep(1)  # Wait for the DOM to update\n",
    "\n",
    "    # Wait for the 'Calculate' button to be clicked\n",
    "    wait = WebDriverWait(browser,60)\n",
    "    succeed = False\n",
    "    while succeed == False:\n",
    "        try:\n",
    "            # Re-locate the link element before clicking it\n",
    "            wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR,\"[href='/v8/MyCompany/Sales/Customer/CalculateContractIndex']\"))).click()\n",
    "            succeed = True\n",
    "        except:\n",
    "            pass\n",
    "    time.sleep(1)  # Wait for the DOM to update\n",
    "\n",
    "    # Re-locate the flex container before reading its text\n",
    "    flex_container = browser.find_elements(By.CLASS_NAME,\"form-row\")\n",
    "    results.append([f\"{i / 10}\", flex_container[0].text])\n",
    "    time.sleep(1)  # Wait for the DOM to update\n",
    "\n",
    "# Print the table of results\n",
    "# print(\"Range\\tContent\")\n",
    "# for row in results:\n",
    "#     print(f\"{row[0]}\\t{row[1]}\")"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "start_time": "2024-04-18T01:02:55.406234Z",
     "end_time": "2024-04-18T01:03:25.576041Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CI for Food & Groceries\n"
     ]
    },
    {
     "data": {
      "text/plain": "  Range Contract Index\n0  90.0         0.8685\n1  90.1         0.8723\n2  90.2         0.8760\n3  90.3         0.8797\n4  90.4         0.8834\n5  90.5         0.8870\n6  90.6         0.8906\n7  90.7         0.8941\n8  90.8         0.8976",
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Range</th>\n      <th>Contract Index</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>90.0</td>\n      <td>0.8685</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>90.1</td>\n      <td>0.8723</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>90.2</td>\n      <td>0.8760</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>90.3</td>\n      <td>0.8797</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>90.4</td>\n      <td>0.8834</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>90.5</td>\n      <td>0.8870</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>90.6</td>\n      <td>0.8906</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>90.7</td>\n      <td>0.8941</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>90.8</td>\n      <td>0.8976</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Get the HTML content\n",
    "customer = browser.find_elements(By.CLASS_NAME,\"has-tooltip\")\n",
    "customer_name = customer[0].get_attribute('innerHTML')\n",
    "soup = BeautifulSoup(customer_name, 'html.parser')\n",
    "text = soup.i.next_sibling.strip()\n",
    "print(\"CI for\",text)\n",
    "# Create a DataFrame from the results\n",
    "df = pd.DataFrame(results, columns=['Range', 'Contract Index'])\n",
    "\n",
    "# Remove \"Contract index\\n\" from the 'Content' column\n",
    "df['Contract Index'] = df['Contract Index'].str.replace('^Contract index\\\\n', '', regex=True)\n",
    "# Display the DataFrame\n",
    "df"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "start_time": "2024-04-18T01:03:29.337152Z",
     "end_time": "2024-04-18T01:03:29.398786Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "outputs": [],
   "source": [
    "df.to_clipboard(index=False)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "start_time": "2024-02-23T23:40:13.502485Z",
     "end_time": "2024-02-23T23:40:13.545926Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "outputs": [],
   "source": [
    "browser.refresh()"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "start_time": "2024-04-18T00:50:01.021367Z",
     "end_time": "2024-04-18T00:50:03.289615Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "outputs": [],
   "source": [
    "# Find all elements that match the CSS selector \"a.btn.edit\"\n",
    "negotiate_elements = browser.find_elements(By.CSS_SELECTOR,\"a.btn.edit\")\n",
    "\n",
    "# Check if there is at least one element\n",
    "if negotiate_elements:\n",
    "    # Click the first element\n",
    "    negotiate_elements[1].click()\n",
    "else:\n",
    "    print(\"No elements found\")"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "start_time": "2024-04-18T01:14:53.625785Z",
     "end_time": "2024-04-18T01:14:53.923488Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "outputs": [],
   "source": [
    "\n",
    "# Initialize a table to store the results\n",
    "results = []\n",
    "\n",
    "# Iterate over the range from 90.0 to 99.0 with a step of 0.1\n",
    "# Iterate over the range from 90.0 to 99.0 with a step of 0.1\n",
    "\n",
    "\n",
    "# Iterate over the range from 90.0 to 99.9 with a step of 0.1\n",
    "for i in range(900, 909):\n",
    "    # Re-locate the input element before interacting with it\n",
    "    input_element = browser.find_elements(By.ID,\"ServiceLevel\")\n",
    "    flex_container = browser.find_elements(By.CLASS_NAME,\"form-row\")\n",
    "\n",
    "    # Set the value of the input element\n",
    "    input_element[1].clear()\n",
    "    input_element[1].send_keys(f\"{i / 10}\")\n",
    "    input_element[1].send_keys(Keys.RETURN)\n",
    "    time.sleep(1)  # Wait for the DOM to update\n",
    "\n",
    "    # Wait for the 'Calculate' button to be clicked\n",
    "    wait = WebDriverWait(browser,60)\n",
    "    succeed = False\n",
    "    while succeed == False:\n",
    "        try:\n",
    "            # Re-locate the link element before clicking it\n",
    "            wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR,\"[href='/v8/MyCompany/Sales/Customer/CalculateContractIndex']\")))\n",
    "            calculate_btns[1].click()\n",
    "            succeed = True\n",
    "        except:\n",
    "            pass\n",
    "    time.sleep(1)  # Wait for the DOM to update\n",
    "\n",
    "    # Re-locate the flex container before reading its text\n",
    "    flex_container = browser.find_elements(By.CLASS_NAME,\"form-row\")\n",
    "    results.append([f\"{i / 10}\", flex_container[9].text])\n",
    "    time.sleep(1)  # Wait for the DOM to update\n",
    "\n",
    "# Print the table of results\n",
    "# print(\"Range\\tContent\")\n",
    "# for row in results:\n",
    "#     print(f\"{row[0]}\\t{row[1]}\")"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "start_time": "2024-04-18T00:52:42.729487Z",
     "end_time": "2024-04-18T00:53:01.453829Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "outputs": [],
   "source": [],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "start_time": "2024-04-18T01:14:03.829031Z",
     "end_time": "2024-04-18T01:14:03.857074Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CI for LAND Market\n"
     ]
    }
   ],
   "source": [
    "customer = browser.find_elements(By.CLASS_NAME,\"has-tooltip\")\n",
    "customer_name = customer[10].get_attribute('innerHTML')\n",
    "soup = BeautifulSoup(customer_name, 'html.parser')\n",
    "text = soup.i.next_sibling.strip()\n",
    "print(\"CI for\",text)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "start_time": "2024-02-23T23:16:19.211182Z",
     "end_time": "2024-02-23T23:16:19.280506Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CI for Dominick's\n"
     ]
    }
   ],
   "source": [
    "customer = browser.find_elements(By.CLASS_NAME,\"has-tooltip\")\n",
    "customer_name = customer[20].get_attribute('innerHTML')\n",
    "soup = BeautifulSoup(customer_name, 'html.parser')\n",
    "text = soup.i.next_sibling.strip()\n",
    "print(\"CI for\",text)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "start_time": "2024-02-23T23:16:33.473621Z",
     "end_time": "2024-02-23T23:16:33.530945Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CI for Food & Groceries\n",
      "  Range Contract Index\n",
      "0   0.0         0.8685\n",
      "1   0.0         0.8723\n",
      "2   0.0         0.8760\n",
      "3   0.0         0.8797\n",
      "4   0.0         0.8834\n",
      "5   0.0         0.8870\n",
      "6   0.0         0.8906\n",
      "7   0.0         0.8941\n",
      "8   0.0         0.8976\n"
     ]
    },
    {
     "ename": "StaleElementReferenceException",
     "evalue": "Message: The element with the reference 205b3596-2d0e-46d6-9862-11526377bbac is stale; either its node document is not the active document, or it is no longer connected to the DOM; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:189:5\nStaleElementReferenceError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:676:5\ngetKnownElement@chrome://remote/content/marionette/json.sys.mjs:286:11\ndeserializeJSON@chrome://remote/content/marionette/json.sys.mjs:233:20\ncloneObject@chrome://remote/content/marionette/json.sys.mjs:54:24\ndeserializeJSON@chrome://remote/content/marionette/json.sys.mjs:240:16\njson.deserialize@chrome://remote/content/marionette/json.sys.mjs:244:10\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:72:30\n",
     "output_type": "error",
     "traceback": [
      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
      "\u001B[1;31mStaleElementReferenceException\u001B[0m            Traceback (most recent call last)",
      "Cell \u001B[1;32mIn[45], line 3\u001B[0m\n\u001B[0;32m      1\u001B[0m negotiate_elements \u001B[38;5;241m=\u001B[39m browser\u001B[38;5;241m.\u001B[39mfind_elements(By\u001B[38;5;241m.\u001B[39mCSS_SELECTOR,\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124ma.btn.edit\u001B[39m\u001B[38;5;124m\"\u001B[39m)\n\u001B[0;32m      2\u001B[0m \u001B[38;5;28;01mfor\u001B[39;00m i \u001B[38;5;129;01min\u001B[39;00m \u001B[38;5;28mrange\u001B[39m(\u001B[38;5;241m0\u001B[39m, \u001B[38;5;28mlen\u001B[39m(negotiate_elements)):\n\u001B[1;32m----> 3\u001B[0m     \u001B[43mnegotiate_elements\u001B[49m\u001B[43m[\u001B[49m\u001B[43mi\u001B[49m\u001B[43m]\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mclick\u001B[49m\u001B[43m(\u001B[49m\u001B[43m)\u001B[49m\n\u001B[0;32m      4\u001B[0m     time\u001B[38;5;241m.\u001B[39msleep(\u001B[38;5;241m1\u001B[39m)\n\u001B[0;32m      5\u001B[0m     input_element \u001B[38;5;241m=\u001B[39m browser\u001B[38;5;241m.\u001B[39mfind_element(By\u001B[38;5;241m.\u001B[39mID,\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mServiceLevel\u001B[39m\u001B[38;5;124m\"\u001B[39m)\n",
      "File \u001B[1;32m~\\PycharmProjects\\pythonProject\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:93\u001B[0m, in \u001B[0;36mWebElement.click\u001B[1;34m(self)\u001B[0m\n\u001B[0;32m     91\u001B[0m \u001B[38;5;28;01mdef\u001B[39;00m \u001B[38;5;21mclick\u001B[39m(\u001B[38;5;28mself\u001B[39m) \u001B[38;5;241m-\u001B[39m\u001B[38;5;241m>\u001B[39m \u001B[38;5;28;01mNone\u001B[39;00m:\n\u001B[0;32m     92\u001B[0m \u001B[38;5;250m    \u001B[39m\u001B[38;5;124;03m\"\"\"Clicks the element.\"\"\"\u001B[39;00m\n\u001B[1;32m---> 93\u001B[0m     \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_execute\u001B[49m\u001B[43m(\u001B[49m\u001B[43mCommand\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mCLICK_ELEMENT\u001B[49m\u001B[43m)\u001B[49m\n",
      "File \u001B[1;32m~\\PycharmProjects\\pythonProject\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:394\u001B[0m, in \u001B[0;36mWebElement._execute\u001B[1;34m(self, command, params)\u001B[0m\n\u001B[0;32m    392\u001B[0m     params \u001B[38;5;241m=\u001B[39m {}\n\u001B[0;32m    393\u001B[0m params[\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mid\u001B[39m\u001B[38;5;124m\"\u001B[39m] \u001B[38;5;241m=\u001B[39m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_id\n\u001B[1;32m--> 394\u001B[0m \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_parent\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mexecute\u001B[49m\u001B[43m(\u001B[49m\u001B[43mcommand\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mparams\u001B[49m\u001B[43m)\u001B[49m\n",
      "File \u001B[1;32m~\\PycharmProjects\\pythonProject\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:344\u001B[0m, in \u001B[0;36mWebDriver.execute\u001B[1;34m(self, driver_command, params)\u001B[0m\n\u001B[0;32m    342\u001B[0m response \u001B[38;5;241m=\u001B[39m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39mcommand_executor\u001B[38;5;241m.\u001B[39mexecute(driver_command, params)\n\u001B[0;32m    343\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m response:\n\u001B[1;32m--> 344\u001B[0m     \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43merror_handler\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mcheck_response\u001B[49m\u001B[43m(\u001B[49m\u001B[43mresponse\u001B[49m\u001B[43m)\u001B[49m\n\u001B[0;32m    345\u001B[0m     response[\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mvalue\u001B[39m\u001B[38;5;124m\"\u001B[39m] \u001B[38;5;241m=\u001B[39m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_unwrap_value(response\u001B[38;5;241m.\u001B[39mget(\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mvalue\u001B[39m\u001B[38;5;124m\"\u001B[39m, \u001B[38;5;28;01mNone\u001B[39;00m))\n\u001B[0;32m    346\u001B[0m     \u001B[38;5;28;01mreturn\u001B[39;00m response\n",
      "File \u001B[1;32m~\\PycharmProjects\\pythonProject\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229\u001B[0m, in \u001B[0;36mErrorHandler.check_response\u001B[1;34m(self, response)\u001B[0m\n\u001B[0;32m    227\u001B[0m         alert_text \u001B[38;5;241m=\u001B[39m value[\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124malert\u001B[39m\u001B[38;5;124m\"\u001B[39m]\u001B[38;5;241m.\u001B[39mget(\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mtext\u001B[39m\u001B[38;5;124m\"\u001B[39m)\n\u001B[0;32m    228\u001B[0m     \u001B[38;5;28;01mraise\u001B[39;00m exception_class(message, screen, stacktrace, alert_text)  \u001B[38;5;66;03m# type: ignore[call-arg]  # mypy is not smart enough here\u001B[39;00m\n\u001B[1;32m--> 229\u001B[0m \u001B[38;5;28;01mraise\u001B[39;00m exception_class(message, screen, stacktrace)\n",
      "\u001B[1;31mStaleElementReferenceException\u001B[0m: Message: The element with the reference 205b3596-2d0e-46d6-9862-11526377bbac is stale; either its node document is not the active document, or it is no longer connected to the DOM; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:189:5\nStaleElementReferenceError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:676:5\ngetKnownElement@chrome://remote/content/marionette/json.sys.mjs:286:11\ndeserializeJSON@chrome://remote/content/marionette/json.sys.mjs:233:20\ncloneObject@chrome://remote/content/marionette/json.sys.mjs:54:24\ndeserializeJSON@chrome://remote/content/marionette/json.sys.mjs:240:16\njson.deserialize@chrome://remote/content/marionette/json.sys.mjs:244:10\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:72:30\n"
     ]
    }
   ],
   "source": [
    "negotiate_elements = browser.find_elements(By.CSS_SELECTOR,\"a.btn.edit\")\n",
    "for i in range(0, len(negotiate_elements)):\n",
    "    negotiate_elements[i].click()\n",
    "    time.sleep(1)\n",
    "    input_element = browser.find_element(By.ID,\"ServiceLevel\")\n",
    "    flex_container = browser.find_element(By.CLASS_NAME,\"form-row\")\n",
    "    results = []\n",
    "    for j in range(900, 909):\n",
    "        input_element = browser.find_element(By.ID,\"ServiceLevel\")\n",
    "        flex_container = browser.find_element(By.CLASS_NAME,\"form-row\")\n",
    "        input_element.clear()\n",
    "        input_element.send_keys(f\"{j / 10}\")\n",
    "        input_element.send_keys(Keys.RETURN)\n",
    "        time.sleep(2)  # Wait for the DOM to update\n",
    "        wait = WebDriverWait(browser,60)\n",
    "        succeed = False\n",
    "        while succeed == False:\n",
    "            try:\n",
    "                wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR,\"[href='/v8/MyCompany/Sales/Customer/CalculateContractIndex']\"))).click()\n",
    "                succeed = True\n",
    "            except:\n",
    "                pass\n",
    "        time.sleep(1)  # Wait for the DOM to update\n",
    "        flex_container = browser.find_element(By.CLASS_NAME,\"form-row\")\n",
    "        results.append([f\"{i / 10}\", flex_container.text])\n",
    "        time.sleep(1)  # Wait for the DOM to update\n",
    "    customer_html = browser.find_element(By.CLASS_NAME,\"has-tooltip\").get_attribute('innerHTML')\n",
    "    soup = BeautifulSoup(customer_html, 'html.parser')\n",
    "    text = soup.i.next_sibling.strip()\n",
    "    print(\"CI for\",text)\n",
    "    df = pd.DataFrame(results, columns=['Range', 'Contract Index'])\n",
    "    df['Contract Index'] = df['Contract Index'].str.replace('^Contract index\\\\n', '', regex=True)\n",
    "    print(df)\n",
    "    browser.refresh()\n",
    "    time.sleep(1)\n"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "start_time": "2024-02-22T22:34:24.558172Z",
     "end_time": "2024-02-22T22:34:24.569892Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "outputs": [
    {
     "ename": "ElementNotInteractableException",
     "evalue": "Message: Element <a class=\"btn edit\" href=\"#\"> could not be scrolled into view\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:189:5\nElementNotInteractableError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:349:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:166:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:135:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:202:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31\n",
     "output_type": "error",
     "traceback": [
      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
      "\u001B[1;31mElementNotInteractableException\u001B[0m           Traceback (most recent call last)",
      "Cell \u001B[1;32mIn[52], line 8\u001B[0m\n\u001B[0;32m      5\u001B[0m \u001B[38;5;66;03m# Check if there is at least one element\u001B[39;00m\n\u001B[0;32m      6\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m negotiate_elements:\n\u001B[0;32m      7\u001B[0m     \u001B[38;5;66;03m# Click the first element\u001B[39;00m\n\u001B[1;32m----> 8\u001B[0m     \u001B[43mnegotiate_elements\u001B[49m\u001B[43m[\u001B[49m\u001B[38;5;241;43m1\u001B[39;49m\u001B[43m]\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mclick\u001B[49m\u001B[43m(\u001B[49m\u001B[43m)\u001B[49m\n\u001B[0;32m      9\u001B[0m \u001B[38;5;28;01melse\u001B[39;00m:\n\u001B[0;32m     10\u001B[0m     \u001B[38;5;28mprint\u001B[39m(\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mNo elements found\u001B[39m\u001B[38;5;124m\"\u001B[39m)\n",
      "File \u001B[1;32m~\\PycharmProjects\\pythonProject\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:93\u001B[0m, in \u001B[0;36mWebElement.click\u001B[1;34m(self)\u001B[0m\n\u001B[0;32m     91\u001B[0m \u001B[38;5;28;01mdef\u001B[39;00m \u001B[38;5;21mclick\u001B[39m(\u001B[38;5;28mself\u001B[39m) \u001B[38;5;241m-\u001B[39m\u001B[38;5;241m>\u001B[39m \u001B[38;5;28;01mNone\u001B[39;00m:\n\u001B[0;32m     92\u001B[0m \u001B[38;5;250m    \u001B[39m\u001B[38;5;124;03m\"\"\"Clicks the element.\"\"\"\u001B[39;00m\n\u001B[1;32m---> 93\u001B[0m     \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_execute\u001B[49m\u001B[43m(\u001B[49m\u001B[43mCommand\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mCLICK_ELEMENT\u001B[49m\u001B[43m)\u001B[49m\n",
      "File \u001B[1;32m~\\PycharmProjects\\pythonProject\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:394\u001B[0m, in \u001B[0;36mWebElement._execute\u001B[1;34m(self, command, params)\u001B[0m\n\u001B[0;32m    392\u001B[0m     params \u001B[38;5;241m=\u001B[39m {}\n\u001B[0;32m    393\u001B[0m params[\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mid\u001B[39m\u001B[38;5;124m\"\u001B[39m] \u001B[38;5;241m=\u001B[39m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_id\n\u001B[1;32m--> 394\u001B[0m \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_parent\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mexecute\u001B[49m\u001B[43m(\u001B[49m\u001B[43mcommand\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mparams\u001B[49m\u001B[43m)\u001B[49m\n",
      "File \u001B[1;32m~\\PycharmProjects\\pythonProject\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:344\u001B[0m, in \u001B[0;36mWebDriver.execute\u001B[1;34m(self, driver_command, params)\u001B[0m\n\u001B[0;32m    342\u001B[0m response \u001B[38;5;241m=\u001B[39m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39mcommand_executor\u001B[38;5;241m.\u001B[39mexecute(driver_command, params)\n\u001B[0;32m    343\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m response:\n\u001B[1;32m--> 344\u001B[0m     \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43merror_handler\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mcheck_response\u001B[49m\u001B[43m(\u001B[49m\u001B[43mresponse\u001B[49m\u001B[43m)\u001B[49m\n\u001B[0;32m    345\u001B[0m     response[\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mvalue\u001B[39m\u001B[38;5;124m\"\u001B[39m] \u001B[38;5;241m=\u001B[39m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_unwrap_value(response\u001B[38;5;241m.\u001B[39mget(\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mvalue\u001B[39m\u001B[38;5;124m\"\u001B[39m, \u001B[38;5;28;01mNone\u001B[39;00m))\n\u001B[0;32m    346\u001B[0m     \u001B[38;5;28;01mreturn\u001B[39;00m response\n",
      "File \u001B[1;32m~\\PycharmProjects\\pythonProject\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229\u001B[0m, in \u001B[0;36mErrorHandler.check_response\u001B[1;34m(self, response)\u001B[0m\n\u001B[0;32m    227\u001B[0m         alert_text \u001B[38;5;241m=\u001B[39m value[\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124malert\u001B[39m\u001B[38;5;124m\"\u001B[39m]\u001B[38;5;241m.\u001B[39mget(\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mtext\u001B[39m\u001B[38;5;124m\"\u001B[39m)\n\u001B[0;32m    228\u001B[0m     \u001B[38;5;28;01mraise\u001B[39;00m exception_class(message, screen, stacktrace, alert_text)  \u001B[38;5;66;03m# type: ignore[call-arg]  # mypy is not smart enough here\u001B[39;00m\n\u001B[1;32m--> 229\u001B[0m \u001B[38;5;28;01mraise\u001B[39;00m exception_class(message, screen, stacktrace)\n",
      "\u001B[1;31mElementNotInteractableException\u001B[0m: Message: Element <a class=\"btn edit\" href=\"#\"> could not be scrolled into view\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:189:5\nElementNotInteractableError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:349:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:166:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:135:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:202:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31\n"
     ]
    }
   ],
   "source": [
    "#########################3\n",
    "# Find all elements that match the CSS selector \"a.btn.edit\"\n",
    "negotiate_elements = browser.find_elements(By.CSS_SELECTOR,\"a.btn.edit\")\n",
    "\n",
    "# Check if there is at least one element\n",
    "if negotiate_elements:\n",
    "    # Click the first element\n",
    "    negotiate_elements[1].click()\n",
    "else:\n",
    "    print(\"No elements found\")\n",
    "\n",
    "# Initialize a table to store the results\n",
    "results = []\n",
    "\n",
    "for i in range(900, 999):\n",
    "    # Re-locate the input element before interacting with it\n",
    "    input_element = browser.find_elements(By.ID,\"ServiceLevel\")\n",
    "    flex_container = browser.find_elements(By.CLASS_NAME,\"form-row\")\n",
    "\n",
    "    # Set the value of the input element\n",
    "    input_element[1].clear()\n",
    "    input_element[1].send_keys(f\"{i / 10}\")\n",
    "    input_element[1].send_keys(Keys.RETURN)\n",
    "    time.sleep(2)  # Wait for the DOM to update\n",
    "\n",
    "    # Wait for the 'Calculate' button to be clicked\n",
    "    wait = WebDriverWait(browser,60)\n",
    "    succeed = False\n",
    "    while succeed == False:\n",
    "        try:\n",
    "            # Re-locate the link element before clicking it\n",
    "            wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR,\"[href='/v8/MyCompany/Sales/Customer/CalculateContractIndex']\"))).click()\n",
    "            succeed = True\n",
    "        except:\n",
    "            pass\n",
    "    time.sleep(1)  # Wait for the DOM to update\n",
    "\n",
    "    # Re-locate the flex container before reading its text\n",
    "    flex_container = browser.find_elements(By.CLASS_NAME,\"form-row\")\n",
    "    results.append([f\"{i / 10}\", flex_container[1].text])\n",
    "    time.sleep(1)  # Wait for the DOM to update\n"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "start_time": "2024-02-22T22:58:17.752880Z",
     "end_time": "2024-02-22T22:58:18.027256Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "outputs": [
    {
     "data": {
      "text/plain": "27"
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Find all elements that match the CSS selector \"a.btn.edit\"\n",
    "negotiate_elements = browser.find_elements(By.CLASS_NAME,\"form-row\")\n",
    "len(negotiate_elements)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "start_time": "2024-02-23T22:56:07.808426Z",
     "end_time": "2024-02-23T22:56:07.853916Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "outputs": [
    {
     "data": {
      "text/plain": "'Contract index\\n1.0166'"
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "negotiate_elements[9].text\n",
    "negotiate_elements[18].text"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "start_time": "2024-02-23T22:56:58.376330Z",
     "end_time": "2024-02-23T22:56:58.409320Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "outputs": [
    {
     "data": {
      "text/plain": "'Contract index'"
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "parent_elements = [element.find_element(By.XPATH, '..') for element in negotiate_elements]\n",
    "parent_elements[2].text"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "start_time": "2024-02-23T22:54:31.139993Z",
     "end_time": "2024-02-23T22:54:31.174828Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "outputs": [
    {
     "data": {
      "text/plain": "3"
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "input_element = browser.find_elements(By.ID,\"ServiceLevel\")\n",
    "len(input_element)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "start_time": "2024-02-23T23:25:06.618977Z",
     "end_time": "2024-02-23T23:25:06.697953Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "outputs": [
    {
     "data": {
      "text/plain": "27"
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "flex_container = browser.find_elements(By.CLASS_NAME,\"form-row\")\n",
    "len(flex_container)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "start_time": "2024-02-23T23:31:22.488444Z",
     "end_time": "2024-02-23T23:31:22.575280Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "outputs": [],
   "source": [],
   "metadata": {
    "collapsed": false
   }
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
